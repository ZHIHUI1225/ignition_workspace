<?xml version="1.0" ?>
<sdf version='1.7'>
  <model name='agent1'>
    <link name='robot_footprint'>
      <inertial>
        <pose>0.00068 0.00068 0.017139 0 -0 0</pose>
       <!--<mass>0.073525</mass>-->
       <mass>5.073525</mass>
        <inertia>
          <ixx>0.100139</ixx>
          <ixy>-2.15998e-07</ixy>
          <ixz>-5.44104e-06</ixz>
          <iyy>0.100139</iyy>
          <iyz>-5.44104e-06</iyz>
          <izz>0.100002</izz>
        </inertia>
      </inertial>
      <collision name='robot_footprint_fixed_joint_lump__collision_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/zhihui/Epuck2_ws/install/epuck2/share/epuck2/meshes/main_body.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <collision name='robot_footprint_fixed_joint_lump__camera_colision_collision_1'>
        <pose>0 0 0.07596 0 -0 0</pose>
        <geometry>
          <box>
            <size>0.01 0.01 0.01</size>
          </box>
        </geometry>
      </collision>
      <collision name='robot_footprint_fixed_joint_lump__hokuyo_colision_collision_2'>
        <pose>0 0 0.05596 0 -0 0</pose>
        <geometry>
          <box>
            <size>0.01 0.01 0.01</size>
          </box>
        </geometry>
      </collision>
      <visual name='robot_footprint_fixed_joint_lump__chassis_visual_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/zhihui/Epuck2_ws/install/epuck2/share/epuck2/meshes/main_body.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <visual name='robot_footprint_fixed_joint_lump__camera_visual_visual_1'>
        <pose>0 0 0.07596 0 -0 0</pose>
        <geometry>
          <box>
            <size>0.01 0.01 0.01</size>
          </box>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <visual name='robot_footprint_fixed_joint_lump__hokuyo_visual_visual_2'>
        <pose>0 0 0.05596 0 -0 0</pose>
        <geometry>
          <box>
            <size>0.01 0.01 0.01</size>
          </box>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Black</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <sensor name='camera_sensor' type='camera'>
        <update_rate>30</update_rate>
        <always_on>1</always_on>
        <camera name='camera'>
          <horizontal_fov>1.39626</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <distortion>
            <k1>0</k1>
            <k2>0</k2>
            <k3>0</k3>
            <p1>0</p1>
            <p2>0</p2>
            <center>0.5 0.5</center>
          </distortion>
        </camera>
        <plugin name='camera_controller' filename='libgazebo_ros_camera.so'>
          <ros>
            <namespace>/agent1</namespace>
            <argument>camera/image_raw:=/bocbot/camera/image</argument>
            <argument>camera/camera_info:=/bocbot/camera/image/camera_info</argument>
          </ros>
          <camera_name>camera</camera_name>
          <frame_name>camera</frame_name>
          <hack_baseline>0.07</hack_baseline>
        </plugin>
        <pose>0 0 0.07596 0 -0 0</pose>
      </sensor>
      <sensor name='head_hokuyo_sensor' type='ray'>
        <visualize>0</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.5708</min_angle>
              <max_angle>1.5708</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>30</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <update_rate>30</update_rate>
        <plugin name='gazebo_ros_head_hokuyo_controller' filename='libgazebo_ros_ray_sensor.so'>
          <ros>
            <namespace>/agent1</namespace>
            <argument>~/out:=scan</argument>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
        </plugin>
        <pose>0 0 0.05596 0 -0 0</pose>
      </sensor>
    </link>
    <joint name='left_wheel_joint' type='revolute'>
      <pose relative_to='robot_footprint'>0.0278 0 0.02 0 -0 0</pose>
      <parent>robot_footprint</parent>
      <child>left_wheel</child>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <effort>0.001</effort>
          <velocity>10</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
        </ode>
      </physics>
    </joint>
    <link name='left_wheel'>
      <pose relative_to='left_wheel_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>-0.000487 -0 0 0 -0 0</pose>
        <!--<mass>0.0040981</mass>-->
         <mass>1.0040981</mass>
        <inertia>
          <ixx>8.267e-07</ixx>
          <ixy>-9.8761e-23</ixy>
          <ixz>-8.6429e-13</ixz>
          <iyy>4.304e-07</iyy>
          <iyz>-2.3376e-22</iyz>
          <izz>4.304e-07</izz>
        </inertia>
      </inertial>
      <collision name='left_wheel_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/zhihui/Epuck2_ws/install/epuck2/share/epuck2/meshes/left_wheel.STL</uri>
          </mesh>
        </geometry>
        <friction>
          <ode>
            <mu>0.5</mu>
            <mu2>0.5</mu2>
          </ode>
        </friction>
      </collision>
      <visual name='left_wheel_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/zhihui/Epuck2_ws/install/epuck2/share/epuck2/meshes/left_wheel.STL</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <joint name='right_wheel_joint' type='revolute'>
      <pose relative_to='robot_footprint'>-0.0278 0 0.02 0 -0 0</pose>
      <parent>robot_footprint</parent>
      <child>right_wheel</child>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <effort>0.001</effort>
          <velocity>10</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
        </ode>
      </physics>
    </joint>
    <link name='right_wheel'>
      <pose relative_to='right_wheel_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0.000651 0 0 0 -0 0</pose>
        <mass>1.0040981</mass>
        <inertia>
          <ixx>8.2274e-07</ixx>
          <ixy>-1.0753e-22</ixy>
          <ixz>8.6429e-13</ixz>
          <iyy>4.2585e-07</iyy>
          <iyz>2.3307e-22</iyz>
          <izz>4.2585e-07</izz>
        </inertia>
      </inertial>
      <collision name='right_wheel_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/zhihui/Epuck2_ws/install/epuck2/share/epuck2/meshes/right_wheel.STL</uri>
          </mesh>
        </geometry>
        <friction>
          <ode>
            <mu>0.5</mu>
            <mu2>0.5</mu2>
          </ode>
        </friction>
      </collision>
      <visual name='right_wheel_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>/home/zhihui/Epuck2_ws/install/epuck2/share/epuck2/meshes/right_wheel.STL</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <static>0</static>
    <plugin name='two_wheeled_robot_diff_drive' filename='libgazebo_ros_diff_drive.so'>
     <ros>
        <namespace>/agent1</namespace>
       <!-- <argument>/cmd_vel:=mr_cme_vel</argument>
        <argument>/odom:=odom</argument>-->
      </ros>
      <update_rate>100.0</update_rate>
      <odometry_frame>odom</odometry_frame>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.05398</wheel_separation>
      <wheel_diameter>0.040</wheel_diameter>
      <robot_base_frame>robot_footprint</robot_base_frame>
      <max_wheel_torque>20</max_wheel_torque>
      <publish_odom>1</publish_odom>
      <publish_odom_tf>1</publish_odom_tf>
      <publish_wheel_tf>1</publish_wheel_tf>
      <odometry_source>world</odometry_source>
    </plugin>
  </model>
</sdf>

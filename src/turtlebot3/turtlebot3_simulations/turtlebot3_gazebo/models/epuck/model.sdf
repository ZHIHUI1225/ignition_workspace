<?xml version="1.0" ?>

<sdf version='1.9'>
  <model name='epuck'>
   <static>false</static>
    <link name='robot_footprint'>
      <inertial>
        <mass>0.553515</mass>
        <inertia>
          <ixx>0.100139</ixx>
          <ixy>-2.15998e-07</ixy>
          <ixz>-5.44104e-06</ixz>
          <iyy>0.100139</iyy>
          <iyz>-5.44104e-06</iyz>
          <izz>0.100002</izz>
        </inertia>
      </inertial>
      <collision name='robot_footprint_fixed_joint_lump__collision_collision'>
        <pose>0 0 0 0 -0 -1.57</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://epuck/meshes/main_body.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='robot_footprint_fixed_joint_lump__chassis_visual_visual'>
        <pose>0 0 0 0 -0 1.57</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://epuck/meshes/main_body.STL</uri>
          </mesh>
        </geometry>
        <material>
          <ambient>0.05 0.05 0.8 1</ambient>  <!-- Blue color -->
          <diffuse>0.1 0.1 1.0 1</diffuse>
        </material>
      </visual>
      <sensor name='camera_sensor' type='camera'>
        <update_rate>30</update_rate>
        <always_on>1</always_on>
        <camera name='camera'>
          <horizontal_fov>1.39626</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <distortion>
            <k1>0</k1>
            <k2>0</k2>
            <k3>0</k3>
            <p1>0</p1>
            <p2>0</p2>
            <center>0.5 0.5</center>
          </distortion>
        </camera>
        <!-- Plugin commented out to prevent errors
        <plugin
          name='ign_ros2_camera'
          filename='libgz-sim-ros2-camera-system.so'>
          <topic>/bocbot/camera</topic>
          <camera_name>camera</camera_name>
          <frame_name>camera</frame_name>
        </plugin>
        -->
        <pose>0 0 0.07596 0 -0 0</pose>
      </sensor>
      <sensor name='head_hokuyo_sensor' type='ray'>
        <visualize>0</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.5708</min_angle>
              <max_angle>1.5708</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>30</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <update_rate>30</update_rate>
        <!-- Plugin commented out to prevent errors
        <plugin
          name='ign_ros2_ray_sensor'
          filename='libgz-sim-ros2-ray-sensor-system.so'>
          <topic>/bocbot/scan</topic>
          <frame_name>head_hokuyo_sensor</frame_name>
        </plugin>
        -->
        <pose>0 0 0.05596 0 -0 0</pose>
      </sensor>
    </link>
    
    <!-- Pushing board link -->
    <link name="pushing_board">
      <inertial>
        <pose>0.04 0 0.03 0 0.0 1.57</pose>
        <mass>0.02</mass>
        <inertia>
          <!-- For rectangular box 0.1 x 0.01 x 0.05 with mass 0.02 kg -->
          <!-- Note: rotated by 1.57 rad (90°) around Z-axis, so dimensions are effectively swapped -->
          <!-- Ixx = (1/12) * m * (b² + c²) = (1/12) * 0.02 * (0.01² + 0.05²) = 0.00000433 -->
          <!-- Iyy = (1/12) * m * (a² + c²) = (1/12) * 0.02 * (0.1² + 0.05²) = 0.0000208 -->
          <!-- Izz = (1/12) * m * (a² + b²) = (1/12) * 0.02 * (0.1² + 0.01²) = 0.0000168 -->
          <ixx>0.00000433</ixx>
          <ixy>0</ixy>
          <iyy>0.0000208</iyy>
          <ixz>0</ixz>
          <iyz>0</iyz>
          <izz>0.0000168</izz>
        </inertia>
      </inertial>
      <collision name="pushing_collision">
        <pose>0.04 0 0.03 0 0.0 1.57</pose>
        <max_contacts>20</max_contacts>
        <geometry>
          <box>
            <size>0.1 0.01 0.05</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.8</mu>
              <mu2>0.8</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="pushing_visual">
        <pose>0.04 0 0.03 0 0.0 1.57</pose>
        <geometry>
          <box>
            <size>0.1 0.01 0.05</size>
          </box>
        </geometry>
        <material>
          <ambient>0.3 0.3 0.3 1</ambient>
          <diffuse>0.8 0.8 0.8 1</diffuse>
        </material>
      </visual>
    </link>
    <link name="fork_left">
      <inertial>
        <pose>0.05 0.05 0.03 0 0.0 0.0</pose>
        <mass>0.005</mass>
          <inertia>
            <ixx>0.0004167</ixx>
            <ixy>0</ixy>
            <iyy>0.0000867</iyy>
            <ixz>0</ixz>
            <iyz>0</iyz>
            <izz>0.0003367</izz>
          </inertia>
      </inertial>
      <collision name="fork_left collision">
        <pose>0.05 0.05 0.03 0 0.0 0.0</pose>
        <max_contacts>20</max_contacts>
        <geometry>
          <box>
            <size>0.02 0.01 0.05</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.8</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="fork_left visual">
        <pose>0.05 0.05 0.03 0.0 0.0 0.0</pose>
        <geometry>
          <box>
            <size>0.02 0.01 0.05</size>
          </box>
        </geometry>
        <material>
          <ambient>0.3 0.3 0.3 1</ambient>
          <diffuse>0.8 0.8 0.8 1</diffuse>
        </material>
      </visual>
    </link>
    <link name="fork_right">
      <inertial>
        <pose>0.05 -0.05 0.03 0 0.0 0.0</pose>
        <mass>0.005</mass>
          <inertia>
            <ixx>0.0004167</ixx>
            <ixy>0</ixy>
            <iyy>0.0000867</iyy>
            <ixz>0</ixz>
            <iyz>0</iyz>
            <izz>0.0003367</izz>
          </inertia>
      </inertial>
      <collision name="fork_right collision">
        <pose>0.05 -0.05 0.03 0 0.0 0.0</pose>
        <max_contacts>20</max_contacts>
        <geometry>
          <box>
            <size>0.02 0.01 0.05</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.8</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0</slip1>
              <slip2>0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="fork_right visual">
        <pose>0.05 -0.05 0.03 0.0 0.0 0.0</pose>
        <geometry>
          <box>
            <size>0.02 0.01 0.05</size>
          </box>
        </geometry>
        <material>
          <ambient>0.3 0.3 0.3 1</ambient>
          <diffuse>0.8 0.8 0.8 1</diffuse>
        </material>
      </visual>
    </link>

    <!-- Joint to attach pushing board -->
    <joint name="pushing_joint" type="fixed">
      <parent>robot_footprint</parent>
      <child>pushing_board</child>
      <pose>0.04 0 0.03 0 0.0 1.57</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- Corrected Wheel Joints -->
    <joint name='left_wheel_joint' type='revolute'>
      <pose relative_to='robot_footprint'> 0.0 0.0278 0.02 0 0 1.57</pose>
      <parent>robot_footprint</parent>
      <child>left_wheel</child>
      <axis>
        <xyz>1 0 0</xyz>  <!-- Correct rotation axis to Y -->
        <limit>
          <effort>0.1</effort>
          <velocity>10</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.1</damping>
          <friction>0.01</friction>
        </dynamics>
      </axis>
    </joint>

    <joint name='right_wheel_joint' type='revolute'>
      <pose relative_to='robot_footprint'>0.0 -0.0278  0.02 0 0 1.57</pose>
      <parent>robot_footprint</parent>
      <child>right_wheel</child>
      <axis>
        <xyz>1 0 0</xyz>  <!-- Correct rotation axis to Y -->
        <limit>
          <effort>0.1</effort>
          <velocity>10</velocity>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <damping>0.1</damping>
          <friction>0.01</friction>
        </dynamics>
      </axis>
    </joint>

    <joint name="Fork_left_joint" type="fixed">
      <parent>robot_footprint</parent>
      <child>fork_left</child>
      <pose>0.05 0.05 0.03 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="Fork_right_joint" type="fixed">
      <parent>robot_footprint</parent>
      <child>fork_right</child>
      <pose>0.05 -0.05 0.03 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- Corrected Wheel Links -->
    <link name='left_wheel'>
      <pose relative_to='left_wheel_joint'>0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.0003</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0001</iyy>
          <iyz>0</iyz>
          <izz>0.0003</izz>
        </inertia>
      </inertial>
      <collision name='left_wheel_collision'>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://epuck/meshes/left_wheel.STL</uri>
          </mesh>
        </geometry>
        <friction>
            <ode>
            <mu>1.0</mu>
            <mu2>0.8</mu2>
            </ode>
         </friction>
      </collision>
      <visual name='left_wheel_visual'>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://epuck/meshes/left_wheel.STL</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name='right_wheel'>
      <pose relative_to='right_wheel_joint'>0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.0003</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0001</iyy>
          <iyz>0</iyz>
          <izz>0.0003</izz>
        </inertia>
      </inertial>
      <collision name='right_wheel_collision'>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://epuck/meshes/right_wheel.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <visual name='right_wheel_visual'>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://epuck/meshes/right_wheel.STL</uri>
          </mesh>
        </geometry>
        <friction>
            <ode>
            <mu>1.0</mu>
            <mu2>0.8</mu2>
            </ode>
         </friction>
      </visual>
    </link>

    <!-- Global odometer -->

    <plugin
        filename="libignition-gazebo-diff-drive-system.so"
        name="ignition::gazebo::systems::DiffDrive">
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>
        <wheel_separation>0.0556</wheel_separation>
        <wheel_radius>0.04</wheel_radius>
        <update_rate>30</update_rate>
        <odometry_frame>world</odometry_frame>
        <robot_base_frame>robot_footprint</robot_base_frame>
        <odometry_topic>/odom</odometry_topic>
        <command_topic>/cmd_vel</command_topic>
        <publish_odom>true</publish_odom>
    </plugin>

    <!-- Plugins commented out to prevent XML parsing errors
    <plugin filename="libignition-gazebo-pose-publisher-system.so"
          name="ignition::gazebo::systems::PosePublisher">
      <publish_link_pose>true</publish_link_pose>
      <publish_nested_model_pose>true</publish_nested_model_pose>
      <use_pose_vector_msg>true</use_pose_vector_msg>
      <static_publisher>true</static_publisher>
      <update_frequency>30</update_frequency>
      <static_update_frequency>30</static_update_frequency>
    </plugin>
    
    <plugin filename="libignition-gazebo-joint-state-publisher-system.so"
      name="ignition::gazebo::systems::JointStatePublisher">
      <topic>/joint_states</topic>
    </plugin>
    -->
  </model>
</sdf>

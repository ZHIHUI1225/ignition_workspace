# Configuration file for GA Planning System
# This YAML file contains all settings for the planning system

# Current Active Case
case_name: "experi"  # Change this to switch between cases

# Timing Configuration (used by both planning and MPC)
discrete_dt: 0.2          # Time step for trajectory discretization and MPC frequency (s)

# Robot Configuration
robots:
  count: 3  # N - number of agents/robots
  radius_limit: 0.3
  min_length: 0.1  # Minimum length for path segments in meters

# Robot Physical Parameters
# Based on official e-puck2 specifications from GCtronic documentation:
# - Wheels: diameter = 41mm (radius = 20.5mm)
# - Wheelbase: 53mm distance between wheels
# - Motors: 2 stepper motors with 50:1 reduction gear, 20 steps/revolution
# - Max speed: 1200 steps/s ≈ 15.4 cm/s (compared to e-puck1: 1000 steps/s ≈ 12.9 cm/s)
# - Resolution: ~0.13mm per step
robot_physical:
  # ===== OFFICIAL HARDWARE LIMITATIONS (from e-puck2 documentation) =====
  hardware_limits:
    # Physical dimensions (fixed by hardware)
    wheel_radius: 0.0205     # m - wheel diameter = 41mm, so radius = 20.5mm = 0.0205m
    wheelbase: 0.053         # m - distance between wheels = 53mm = 0.053m
    
    # Motor specifications (fixed by hardware)
    steps_per_revolution: 20
    gear_reduction_ratio: 50
    max_steps_per_second: 1200    # Maximum motor speed
    
    # Maximum theoretical speeds (calculated from motor specs)
    # e-puck2: Max 1200 steps/s with 50:1 reduction = 24 steps/s at wheel
    # 24 steps/s / 20 steps/rev = 1.2 rev/s → 0.1546 m/s linear speed
    linear_velocity_max_hw: 0.1546    # m/s - absolute hardware maximum (15.5 cm/s)
    angular_velocity_max_hw: 5.8327   # rad/s - absolute hardware maximum (334.2 deg/s)
    
    # Wheel acceleration calculations:
    # Max wheel angular velocity: 1.2 rev/s × 2π = 7.54 rad/s
    # Assuming 0.5s acceleration time: 7.54/0.5 = 15.08 rad/s²
    # Linear acceleration = wheel_accel × wheel_radius = 15.08 × 0.0205 = 0.309 m/s²
    wheel_angular_velocity_max: 7.5398   # rad/s - maximum wheel rotation speed
    wheel_angular_acceleration_max: 15.08 # rad/s² - wheel acceleration (0.5s to max speed)
    linear_acceleration_max_hw: 0.309    # m/s² - from wheel acceleration × radius
    angular_acceleration_max_hw: 11.67   # rad/s² - robot angular acceleration (0.5s to max speed)
  
  # ===== USER-DEFINED OPERATIONAL LIMITATIONS (set by you for safety/control) =====
  operational_limits:
    # Wheel speed limits (realistic operational values based on e-puck2 capabilities)
    # Using 80% of hardware maximum for safety: 0.8 * 1200 = 960 steps/s
    wheel_angular_velocity_max: 2.0     # rad/s - 80% of hardware max (960 steps/s)
    
    # Speed limits (calculated from realistic wheel limit) - matching MPC controller settings
    # Linear velocity = wheel_angular_velocity × wheel_radius = 6.03 × 0.0205 = 0.124 m/s (12.4 cm/s)
    # Angular velocity = 2 × linear_velocity / wheelbase = 2 × 0.124 / 0.053 = 4.68 rad/s
    linear_velocity_max: 0.05        # m/s - reduced for smooth control (5 cm/s)
    linear_velocity_min: 0.0         # m/s - no reverse motion (matching MPC controller)
    angular_velocity_max: 0.4        # rad/s - reduced for smooth control (23 deg/s)
    angular_velocity_min: -0.4       # rad/s - matching MPC controller
    
    # Acceleration limits (consistent with velocity limits for smooth control)
    # Reasonable acceleration that allows reaching max velocity in 2-3 seconds
    # Linear: a_max = v_max / t_accel = 0.05 / 2.5 = 0.02 m/s²
    linear_acceleration_max: 0.02       # m/s² - smooth acceleration (2.5s to max speed)
    # Angular: α_max = ω_max / t_accel = 0.4 / 2.5 = 0.16 rad/s²
    angular_acceleration_max: 0.16      # rad/s² - smooth angular acceleration (2.5s to max speed)
    
    # Calculate wheel angular acceleration:
    # α_wheel = α_linear / wheel_radius = 0.053 / 0.0205 = 2.59 rad/s²
    wheel_angular_acceleration_max: 0.5 # rad/s² - calculated from linear acceleration
    
    # Environmental parameters (your assumptions)
    friction_coefficient: 0.7    # μ - coefficient of friction (rubber on concrete)
    safety_factor: 0.8          # μ_f - safety factor
    gravity: 9.81               # g - gravitational acceleration (m/s²)
    friction_limit: 5.4936      # μ * μ_f * g (calculated: 0.7 * 0.8 * 9.81)

# Coordinate System Conversion
coordinate_conversion:
  pixel_to_meter_scale: 0.0023  # Scale factor to convert pixels to meters
  meter_to_pixel_scale: 434.78  # Scale factor to convert meters to pixels (1/0.0023)

# MPC Controller Settings
mpc_controller:
  # Velocity limits for smooth motion (matching operational_limits)
  max_linear_velocity: 0.05    # m/s - consistent with operational limits (5 cm/s)
  min_linear_velocity: 0.0     # m/s - no reverse motion allowed
  max_angular_velocity: 0.4    # rad/s - consistent with operational limits (23 deg/s)
  min_angular_velocity: -0.4   # rad/s - consistent with operational limits
  
  # Control frequency and horizon from mobile_robot_mpc.py
  prediction_horizon: 5        # MPC prediction steps - reduced from 10 to 5 for faster computation
  
  # MPC cost weights from mobile_robot_mpc.py
  position_weight: 200.0       # Higher position weight (200.0) for better tracking
  orientation_weight: 3.0      # Lower orientation weight (3.0) to reduce angular sensitivity
  velocity_weight: 0.2         # Lower velocity weight (0.2)
  omega_weight: 0.2            # Lower omega weight (0.2)
  control_linear_weight: 0.05  # Linear control weight (0.05) for more responsive control
  control_angular_weight: 0.3  # Angular control weight (0.3) for smoother turning
  
  # PI Controller fallback parameters from mobile_robot_mpc.py
  pi_controller:
    kp_position: 0.3           # Position proportional gain - further reduced
    ki_position: 0.01          # Position integral gain - further reduced
    kp_angle: 0.25             # Angle proportional gain - much lower to prevent over-rotation
    ki_angle: 0.005            # Angle integral gain - very low to prevent oscillation

# Planning Parameters
planning:
  phi0: 0.0 # Initial angle 0
  deltal: 0.02              # Small segment length for discretization (m)

# Arc Range Configuration
arc_range: [50, 700]  # [min, max] range for arc calculations pixel

# Paths Configuration
paths:
  base_path: "/root/workspace/src/Replanning/scripts"
  data_path: "/root/workspace/data"
  config_path: "/root/workspace/config"

# Start and Goal Poses
poses:
  start_pose: [150.0, 540.0, 1.2560000000000002]  # [x, y, theta]
  goal_pose: [980.0, 520.0, 3.14159265]   # [x, y, theta]

# Genetic Algorithm Parameters
genetic_algorithm:
  num_generations: 5000
  population_size: 80
  num_parents_mating: 40
  mutation_probability: 0.02
  crossover_probability: 0.95
  keep_elitism: 5
  parent_selection_type: "tournament"
  crossover_type: "uniform"
  mutation_type: "random"

# Optimization Constraints
constraints:
  angle_bounds:
    lower: -3.14159  # -pi
    upper: 3.14159   # pi
  first_waypoint:
    lower_factor: 0.2  # 0.2 * pi
    upper_factor: 0.6  # 0.6 * pi
  penalties:
    cos_constraint: 1000000
    direction_constraint: 500000
    radius_constraint: 1000000
    length_constraint: 1000000
    corridor_constraint: 100000

# Visualization Settings
visualization:
  waypoint_color: "go"
  relay_point_color: "ro"
  path_color: "b"
  environment_color: "black"
  save_plots: true

# Monitoring Settings
monitoring:
  print_progress_every: 100
  early_stopping: true
